@model IEnumerable<OrderHeaderVM>

<h3>My Orders</h3>
<hr />
@if (Model.Count() > 0)
{
    <table class="table table-striped table-hover">
        <thead class="text-bold">
            <tr>
      @*           <td>@Html.DisplayNameFor(x => x.Id)</td> *@
                <td>@Html.DisplayNameFor(x => x.Name)</td>
                <td>@Html.DisplayNameFor(x => x.Email)</td>
                <td>@Html.DisplayNameFor(x => x.PhoneNumber)</td>
                <td>@Html.DisplayNameFor(x => x.TotalPrice)</td>
                <td>@Html.DisplayNameFor(x => x.OrderStatus)</td>
                <td>@Html.DisplayNameFor(x => x.OrderDate)</td>
             @*    <td>Actions</td> *@
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                <tr>
                 @*    <td>@item.Id</td> *@
                    <td>@item.Name</td>
                    <td>@item.Email</td>
                    <td>@item.PhoneNumber</td>
                    <td>@item.TotalPrice</td>
                    <td>@item.OrderStatus</td>
                    <td>@item.OrderDate.ToShortDateString()</td>
      @*               <td>
                        <a asp-action="Details" asp-route-orderId="@item.Id" class="btn btn-success">Details</a>
                    </td> *@

                </tr>
            }
        </tbody>
    </table>

    <div class="pagination-container">
        @Html.PagedListPager(
                (IPagedList)Model,
                page => Url.Action(
                action: "MyOrders",
                controller: "Home",
                values: new { area = "Customer", page }),
                new PagedListRenderOptions
    {
        LiElementClasses = new string[] { "page-item" },
        PageClasses = new string[] { "page-link" }
    }
                )

    </div>
}
else
{
    <h1 class="alert alert-warning">There is no Orders Yet</h1>
}
